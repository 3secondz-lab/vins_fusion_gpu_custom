%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1
num_of_cam: 2

imu_topic: "/xsens/imu/data"
image0_topic: "/cam0/pub/image"
image1_topic: "/cam1/pub/image"
output_path: "/home/ys/output_stereo/"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 1280
image_height: 256
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0     # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [  -0.018469379358593,   0.015122379482392,   0.999715054452841,   0.011765435614501,
            -0.999784754216097,   0.009172724955245,  -0.018609420544522,   0.036708786088400,
            -0.009451534990669,  -0.999843570232840,   0.014949710188713,  -0.004236219262847,
                             0,                   0,                   0,   1.000000000000000]
   # data: [1,   0,   0,         0,
   #          0,    1,   0,         0,
   #          0,   0,    1,        0,
   #          0,   0,   0,    1.0000]

# Data : T_ic (cam0 to imu0) from Kalibr result


body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [  -0.022177519621381,   0.015908769187111,   0.999620270614892,   0.007875421887029,
            -0.999707321072963,   0.008555048417264,  -0.022315181671226,  -0.292908552345805,
            -0.008909784653302,  -0.999836342813184,   0.015716613059746,  -0.006136541095786,
                             0,                   0,                   0,   1.000000000000000]
   # data: [  -0.022177519621381,   0.015908769187111,   0.999620270614892,   0.307875421887029,
   #          -0.999707321072963,   0.008555048417264,  -0.022315181671226,   0.008908552345805,
   #          -0.008909784653302,  -0.999836342813184,   0.015716613059746,  -0.006136541095786,
   #                           0,                   0,                   0,   1.000000000000000]
   # data: [1,   0,   0,         -0.3,
   #          0,    1,   0,         0,
   #          0,   0,    1,        0,
   #          0,   0,   0,    1.0000]

# Data : T_ic (cam1 to imu0) from Kalibr result



#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1



#feature traker paprameters
max_cnt: 500            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
#freq: 2                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.05         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.01         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8     # gravity magnitude

#acc_n: 0.1          # accelerometer measurement noise standard deviation. 
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.     
#acc_w: 0.001        # accelerometer bias random work noise standard deviation.  
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     
#g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/ys/output_stereo/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
